<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org/DTD Mapper 3.0// EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace = "com.dreamsecurity.mapper.group">

	<resultMap type="groupSolutionVo" id="groupSolutionVoMap">
		<id column="SEQ_ID" property="id" />
		<result column="GROUP_ID" property="groupId"/>
		<result column="SOLUTION_NAME" property="solutionName"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="CREATOR" property="creator"/>
		<result column="STATE" property="state"/>
	</resultMap>

	<resultMap type="groupVo" id="groupVoMap">
		<id column="ID" property="id"/>
		<result column="NAME" property="name"/>
		<result column="ALT_NAME" property="altName"/> 
		<result column="CREATE_DATE" property="createDate"/>
		<result column="CREATOR" property="creator"/>
		<result column="STATE" property="state"/>
		<result column="DESCRIPTION" property="description"/>
		<association property="groupSolutionVo" resultMap="groupSolutionVoMap"/>
		<association property="userVo" resultMap="userVoMap" />
	</resultMap>

	<resultMap type="userVo" id="userVoMap">
		<id column="USER_ID" property="id"/>
		<result column="NAME" property="name" />
		<result column="ADD_DATE" property="addDate" />
		<result column="DEPART_DATE" property="departTeam" />
		<result column="JOB_LEVEL" property="jobLevel" />
		<result column="E_MAIL" property="eMail" />
		<result column="PASSWORD" property="password" />
		<result column="STATE" property="state" />
	</resultMap>
	
	<insert id="registerGroup" parameterType="groupVo" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into group_info (
			name,
			alt_name,
			create_date,
			creator,
			state,
			description
		) values ( 
			#{name},
			#{altName},
			#{createDate},
			#{creator},
			#{state},
			#{description}
		);
	</insert>
	
	<insert id="addUserToGroup" parameterType="userGroupVo">
		insert into user_group(
			user_id,
			group_id,
			join_date,
			user_authority,
			state
		) values ( 
			#{userId},
			#{groupId},
			#{joinDate},
			#{userAuthority},
			#{state}
		)
	</insert>
	
	<select id="selectGroupList" parameterType="map" resultType="map">
		select
			id,
			name,
			alt_name altName,
			create_date createDate,
			creator,
			state,
			description
		from
			group_info
		where
			state = 0 
		limit ${cri.perPageNum} offset ${cri.pageStart}
	</select>
	
	<select id="selectGroupListCnt" resultType="int">
		select
			count(*)
		from
			group_info
		where
			state = 0
	</select>
	
	<!-- 그룹원 가입 신청 리스트 -->
	<select id="selectUserGroupApplyList" parameterType="map" resultType="map">
		select 
			ug.user_id userid,
		    ui.name username,
		    ug.join_date joindate,
		    ui.depart_team departteam,
		    ui.job_level joblevel
		from
			user_group ug
		inner join user_info ui on ug.user_id = ui.id
		where 
			ug.state = 0 and group_id=#{groupId}
		limit ${cri.perPageNum} offset ${cri.pageStart}
	</select>
	
	<select id="selectUserGroupApplyListCnt" parameterType="int" resultType="int">
		select 
			count(*)
		from
			user_group ug
		inner join user_info ui on ug.user_id = ui.id
		where 
			ug.state = 0 and group_id=#{groupId}
	</select>
	
	<select id="selectGroupApplyList" parameterType="map" resultType="map">
		select 
			gi.id,
		    gi.name,
		    gi.alt_name altName,
		    gi.create_date createDate,
		    gi.creator,
		    gi.state,
		    gi.description,
		    gis.seq_id seqId,
		    gis.group_id GroupId,
		    gis.solution_name solutionName,
		    gis.state
		from 
			group_info gi
		inner join group_info_solution gis on gis.group_id = gi.id
		where 
			gi.state = 3 and gis.state = 4 
	</select>
	
	<select id="selectGroupApplyListCnt" resultType="int">
		select
			count(*)
		from 
			group_info gi
		inner join group_info_solution gis on gis.group_id = gi.id
		where 
			gi.state = 3 and gis.state = 4 
	</select>
	
	<select id="selectGroupSolutionApplyList" parameterType="map" resultType="map">
		select 
			gi.id,
		    gi.name,
		    gi.creator,
		    gi.state,
		    gis.seq_id seqId,
		    gis.group_id GroupId,
		    gis.solution_name solutionName,
		    gis.create_date createDate,
		    gis.creator,
		    gis.state
		from 
			group_info gi
		inner join group_info_solution gis on gis.group_id = gi.id
		where 
			gi.state = 0 and gis.state = 3
	</select>
	
	<select id="selectGroupSolutionApplyListCnt" resultType="int">
		select
			count(*)
		from
			group_info gi
		inner join group_info_solution gis on gis.group_id = gi.id
		where 
			gi.state = 0 and gis.state = 3 
	</select>
	
	<update id="updateUserState" parameterType="userGroupVo" >
		update
			user_group
		set
			state = #{state}
		where
			user_id = #{userId} and group_id = #{groupId}	
	</update>
	
	<update id="updateUserStateUsingGroupId" parameterType="userGroupVo" >
		update
			user_group
		set
			state = #{state}
		where
			group_id = #{groupId}	
	</update>
	
	<update id="updateGroupStateUsingGroupId" parameterType="groupVo">
		update
			group_info
		set
			state = #{state}
		where
			id = #{id}
	</update>
	
	<update id="updateGroupSolutionStateUsingGroupId" parameterType="groupSolutionVo">
		update
			group_info_solution
		set
			state = #{state}
		where
			group_id = #{groupId}
	</update>
	
	<select id="selectGroupMaster" parameterType="UserGroupVo" resultType="UserGroupVo">
		select
			*
		from
			user_group
		where
			(user_id = #{userId} and group_id = #{groupId}) and 
		    (user_authority = 0 or user_authority = 1)
	</select>
	
	<select id="selectUserGroupList" parameterType="userGroupVo" resultType="userGroupVo">
		select
			user_id userId,
			group_id groupId,
			join_date joinDate,
			user_authority userAuthority,
			state
		from
			user_group
		where
			group_id=#{groupId}		
	</select>
	
	<insert id="insertUserToGroup" parameterType="userGroupVo">
		insert into	user_group(
			user_id,
			group_id,
			join_date,
			user_authority,
			state
		) values (
			#{userId},
			#{groupId},
			#{joinDate},
			#{userAuthority},
			#{state}
		);
	</insert>
	
	<delete id="deleteUserToGroup" parameterType="userGroupVo">
		delete from user_group
		where
			user_id=#{userId} and
			group_id=#{groupId}
	</delete>
	
	<insert id="insertGroupSolution" parameterType="groupSolutionVo">
		insert into group_info_solution (
			group_id,
			solution_name,
			state
		) values (
			#{groupId},
			#{solutionName},
			#{state}
		)
	</insert>
	
	<select id="selectJoinedGroupList" parameterType="String" resultMap="groupVoMap">
		select
			gi.id, 
            gi.name,
            gis.solution_name
		from
			user_group ug
		inner join group_info gi on gi.id = ug.group_id
        inner join group_info_solution gis on gi.id = gis.group_id
		where 
			user_id = #{val} and ug.state = 1 and gi.state = 0 and gis.state = 0
	</select>
	
	<select id="selectUserSolutionJoinUsingGroupId" parameterType="groupVo" resultMap="groupVoMap" >
		select
			gi.id,
			gi.creator,
			ui.id user_id,
			ui.depart_team,
		    uis.solution_name
		from 
			group_info gi
		inner join user_info ui on gi.creator = ui.id
		inner join group_info_solution uis on gi.id = uis.group_id
		where
			gi.id = #{id}
	</select>
</mapper>