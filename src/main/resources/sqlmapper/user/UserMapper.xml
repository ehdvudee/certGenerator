<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org/DTD Mapper 3.0// EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace = "net.glaso.mapper.user">

	<resultMap type="appliedUserInfoVo" id="appliedUserInfoVoMap">
		<id column="ui_seq_id" property="seqId"/>
		<result column="user_id" property="userId"/>
		<result column="password" property="password" />
		<result column="add_date" property="addDate" />
		<result column="name" property="name" />
		<result column="depart_team" property="departTeam" />
		<result column="job_level" property="jobLevel" />
		<result column="e_mail" property="eMail" />
		<result column="group_creator" property="groupCreator" />
		<result column="group_id" property="groupId" />
		<result column="group_name" property="groupName" />
		<result column="solution_name" property="solutionName" />
		<result column="group_description" property="groupDescription" />
		<result column="state" property="state" />
		<association property="appliedUserMailVo" resultMap="appliedUserMailVoMap"/>
	</resultMap>

	<resultMap type="appliedUserMailVo" id="appliedUserMailVoMap">
		<id column="um_seq_id" property="seqId"/>
		<result column="send_date" property="sendDate"/>
		<result column="expired_date" property="expiredDate" />
		<result column="auth_uri" property="authUri" />
		<result column="applied_user_info_seq_id" property="appliedUserInfoSeqId" />
		<result column="activated_state" property="activatedState" />
		<result column="state" property="state" />
	</resultMap>

	<insert id="insertUser" parameterType="userVo">
		insert into user_info (
			id,
			name,
			add_date,
			depart_team,
			job_level,
			e_mail,
			password,
			state
		) values ( 
			#{id},
			#{name},
			#{addDate},
			#{departTeam},
			#{jobLevel},
			#{eMail},
			#{password},
			#{state}
		)
	</insert>
	
	<insert id="insertAppliedUser" parameterType="appliedUserInfoVo" useGeneratedKeys="true" keyColumn="seq_id" keyProperty="seqId">
		insert into applied_user_info ( 
			user_id,
			password,
			add_date,
			name,
			depart_team,
			job_level,
			e_mail,
			group_creator,
			group_id,
			group_name,
			solution_name,
			group_description,
			state
		) values (
			#{userId},
			#{password},
			#{addDate},
			#{name},
			#{departTeam},
			#{jobLevel},
			#{eMail},
			#{groupCreator},
			#{groupId},
			#{groupName},
			#{solutionName},
			#{groupDescription},
			#{state}
		)
	</insert>
	
	<select id="selectAppliedUserList" parameterType="map" resultType="map">
		select 
			seq_id seqId,
			user_id userId,
			add_date addDate,
			name,
			depart_team departTeam,
			job_level jobLevel,
			e_mail eMail,
			group_creator groupCreator,
			group_id groupId,
			solution_name solutionName,
			group_description groupDescription
		from
			applied_user_info
		where
			state = 0
		limit ${cri.perPageNum} offset ${cri.pageStart}
	</select>
	
	<select id="selectAppliedUserListCnt" resultType="int">
		select
			count(*)
		from
			applied_user_info
		where
			state = 0	
	</select>
	
	<select id="selectAppliedUserInfoOne" parameterType="int" resultType="appliedUserInfoVo">
		select 
			seq_id seqId,
			user_id userId,
			password,
			add_date addDate,
			name,
			depart_team departTeam,
			job_level jobLevel,
			e_mail eMail,
			group_creator groupCreator,
			group_id groupId,
			group_name groupName,
			solution_name solutionName,
			group_description groupDescription
		from
			applied_user_info
		where
			seq_id = #{value}
	</select>
	
	<update id="updateAppliedUserState" parameterType="appliedUserInfoVo">
		update
			applied_user_info
		set
			state = #{state}
		where
			seq_id = #{seqId}
	</update>
	
	<select id="selectOneUser" parameterType="userVo" resultType="userVo">
		select
			id,
			name,
			depart_team departTeam,
			job_level jobLevel,
			password,
			state
		from
			user_info
		where
			id=#{loginId}
	</select>
	
	<select id="selectUserList" resultType="map">
		select
			id,
			name,
			add_date addDate,
			depart_team departTeam,
			job_level jobLevel,
			state
		from
			user_info
	</select>
	
	<select id="selectUserOne4ChkOverlap" parameterType="userVo" resultType="userVo">
		select
			id
		from
			user_info
		where
			id = #{id}
	</select>
	
	<select id="selectAppliedUserOne4ChkOverlap" parameterType="userVo" resultType="userVo">
		select
			user_id id
		from
			applied_user_info
		where
			user_id = #{id}
	</select>


	<insert id="insertAppliedUserMail" parameterType="appliedUserMailVo">
		insert into applied_user_mail(
			send_date,
			expired_date,
			auth_uri,
			applied_user_info_seq_id,
			activated_state,
			state
		) values (
			#{sendDate},
			#{expiredDate},
			#{authUri},
			#{appliedUserInfoSeqId},
			#{activatedState},
			#{state}
		);
	</insert>

	<select id="selectAppliedUserMailUsingAuthVal" parameterType="String" resultMap="appliedUserInfoVoMap">
		select
			aui.seq_id ui_seq_id,
			aui.user_id,
			aui.password,
			aui.add_date,
			aui.name,
			aui.depart_team,
			aui.job_level,
			aui.e_mail,
			aui.group_creator,
			aui.group_id,
			aui.group_name,
			aui.solution_name,
			aui.group_description,
			aui.state,
			aum.seq_id um_seq_id
		from
			applied_user_mail aum
		inner join applied_user_info aui on aum.applied_user_info_seq_id = aui.seq_id
		where
			auth_uri = #{val} and
			activated_state = 1

	</select>

	<update id="updateAppliedUserMailActState" parameterType="appliedUserMailVo">
		update
			applied_user_mail
		set
			activated_state = #{activatedState}
		where
			seq_id = #{seqId}
	</update>

	<select id="selectAppliedUserUsingSeqId" parameterType="int" resultMap="appliedUserInfoVoMap">
		select
			aui.seq_id ui_seq_id,
			aui.user_id,
			aui.password,
			aui.add_date,
			aui.name,
			aui.depart_team,
			aui.job_level,
			aui.e_mail,
			aui.group_creator,
			aui.group_id,
			aui.group_name,
			aui.solution_name,
			aui.group_description,
			aum.activated_state
		from
			applied_user_info aui
		inner join applied_user_mail aum on aui.seq_id = aum.applied_user_info_seq_id
		where
			aui.seq_id = #{val}
	</select>

	<select id="selectAppliedUserMailList" parameterType="int" resultMap="appliedUserInfoVoMap" >
		select
			aum.seq_id um_seq_id,
			aum.expired_date,
			aui.seq_id ui_seq_id
		from
			applied_user_mail aum
		inner join applied_user_info aui on aui.seq_id = aum.applied_user_info_seq_id
		where
			aum.activated_state = #{val}
	</select>

	<update id="updateAppliedUserMailActStateMultiple" parameterType="map">
		update
			applied_user_mail
		set
			activated_state = #{activatedState}
		where
			seq_id in (
			<foreach collection="updatedMailList" item="item" separator=",">
				#{item.value}
			</foreach>
			)

	</update>

	<update id="updateAppliedUserInfoStateMultiple" parameterType="map">
		update
			applied_user_info
		set
			state = #{state}
		where
			seq_id in (
			<foreach collection="updatedUserList" item="item" separator=",">
				#{item.value}
			</foreach>
			)
	</update>
</mapper>